/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/7.4.2/userguide/multi_project_builds.html
 */

rootProject.name = "sdk-java"

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }

    versionCatalogs {
        create("libs") {
            version("grpc", "1.50.2")
            version("assertj", "3.23.1")
            version("log4j", "2.19.0")
            version("jackson", "2.14.0")
            version("opentelemetry", "1.19.0")
            version("tomcat-annotations-api", "6.0.53")
            version("junit-jupiter", "5.9.1")
            version("protobuf", "3.21.9")
            version("errorprone", "2.13.1")

            library("grpc-core", "io.grpc", "grpc-core").versionRef("grpc")
            library("grpc-stub", "io.grpc", "grpc-stub").versionRef("grpc")
            library("grpc-protobuf", "io.grpc", "grpc-protobuf").versionRef("grpc")
            library("grpc-netty-shaded", "io.grpc", "grpc-netty-shaded").versionRef("grpc")
            library("grpc-api", "io.grpc", "grpc-api").versionRef("grpc")

            library("assertj", "org.assertj", "assertj-core").versionRef("assertj")

            library("log4j-api", "org.apache.logging.log4j", "log4j-api").versionRef("log4j")
            library("log4j-core", "org.apache.logging.log4j", "log4j-core").versionRef("log4j")

            library("jackson-bom", "com.fasterxml.jackson", "jackson-bom").versionRef("jackson")
            library("jackson-core", "com.fasterxml.jackson.core", "jackson-core").withoutVersion()
            library("jackson-databind", "com.fasterxml.jackson.core", "jackson-databind").versionRef("jackson")
            library("jackson-cbor", "com.fasterxml.jackson.dataformat", "jackson-dataformat-cbor")
                .withoutVersion()

            library("opentelemetry-bom", "io.opentelemetry", "opentelemetry-bom").versionRef("opentelemetry")
            library("opentelemetry-api", "io.opentelemetry", "opentelemetry-api").withoutVersion()
            library("opentelemetry-semconv", "io.opentelemetry:opentelemetry-semconv:1.19.0-alpha")

            library("javax-annotation-api", "org.apache.tomcat", "annotations-api").versionRef("tomcat-annotations-api")

            library("junit-jupiter", "org.junit.jupiter", "junit-jupiter").versionRef("junit-jupiter")
            library("junit-api", "org.junit.jupiter", "junit-jupiter-api").versionRef("junit-jupiter")

            library("protobuf-java", "com.google.protobuf", "protobuf-java").versionRef("protobuf")
            library("protoc", "com.google.protobuf", "protoc").versionRef("protobuf")

            library("errorprone", "com.google.errorprone", "error_prone_core").versionRef("errorprone")

            plugin("spotless", "com.diffplug.spotless").version("6.6.1")
            plugin("errorprone", "net.ltgt.errorprone").version("2.0.2")
            plugin("protobuf", "com.google.protobuf").version("0.9.1")
            plugin("test-logger", "com.adarshr.test-logger").version("3.2.0")
        }
    }
}
